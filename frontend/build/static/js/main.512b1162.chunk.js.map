{"version":3,"sources":["constants/userConstants.js","screens/Login.js","actions/userAction.js","components/Profile.js","assets/side_logo.png","components/SideNav.js","components/AdminUsers.js","screens/Dashboard.js","App.js","store.js","reducers/userReducers.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USERS_LIST_REQUEST","USERS_LIST_SUCCESS","USERS_LIST_FAIL","USER_ADD_REQUEST","USER_ADD_SUCCESS","USER_ADD_FAIL","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","history","useHistory","userLogin","useSelector","state","error","userInfo","useEffect","push","Row","className","Col","xs","span","order","md","Container","Alert","variant","Form","onSubmit","e","preventDefault","a","type","config","headers","axios","post","data","payload","response","message","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","Profile","name","userName","SideNav","pages","Nav","defaultActiveKey","src","banner","map","page","index","NavItem","to","path","onClick","window","location","reload","AdminUsers","setName","setUserName","userType","setUserType","show","setShow","handleClose","usersList","newUser","get","undefined","loading","Table","striped","bordered","hover","users","user","Modal","onHide","Header","closeButton","Title","Body","addUser","Check","inline","label","id","authPages","Dashboard","fluid","exact","component","render","props","App","reducer","combineReducers","action","newuser","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.512b1162.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USERS_LIST_REQUEST = 'USERS_LIST_REQUEST'\r\nexport const USERS_LIST_SUCCESS = 'USERS_LIST_SUCCESS'\r\nexport const USERS_LIST_FAIL = 'USERS_LIST_FAIL'\r\n\r\nexport const USER_ADD_REQUEST = 'USER_ADD_REQUEST'\r\nexport const USER_ADD_SUCCESS = 'USER_ADD_SUCCESS'\r\nexport const USER_ADD_FAIL = 'USER_ADD_FAIL'\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Alert, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/userAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n\r\n    //to get state from store\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n            history.push('/dashboard/profile')\r\n        }\r\n\r\n    }, [userInfo])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"login\">\r\n                <Col xs={{ span: 12, order: 2 }} md={{ span: 6, order: 1 }} className=\"login_banner\">\r\n                </Col>\r\n                <Col xs={{ span: 12, order: 2 }} md={{ span: 6, order: 1 }} className=\"login_form\">\r\n                    <Container>\r\n                        <h4 className=\"text-center \">\r\n                            <strong>Login via Email</strong>\r\n                        </h4>\r\n                        {error && <Alert variant=\"danger\" className=\"login_form_item\">{error}</Alert>}\r\n                        <Form onSubmit={submitHandler} className=\"login_form_item\">\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Your primary address\" value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password </Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Your password\" value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"info\">Sign In</Button>\r\n                        </Form>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import axios from \"axios\"\r\nimport {\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,\r\n    USER_ADD_FAIL, USER_ADD_REQUEST, USER_ADD_SUCCESS,\r\n    USERS_LIST_FAIL, USERS_LIST_REQUEST, USERS_LIST_SUCCESS\r\n\r\n} from \"../constants/userConstants\"\r\n\r\nconst url = \"http://localhost:3000\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'appliction/json'\r\n            }\r\n        }\r\n        // const { data } = await axios.post(`${url}/api/login`, { email, password, config })\r\n        const { data } = await axios.post(`/api/login`, { email, password, config })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USER_LOGIN_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const getUserList = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USERS_LIST_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/getAllUsers`)\r\n        dispatch({\r\n            type: USERS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USERS_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const addUser = (email, name, userName, userType) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_ADD_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.post(`/api/addUser`, { email, name, userName, userType })\r\n        dispatch({\r\n            type: USER_ADD_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USER_ADD_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}   ","import React from 'react'\r\nimport { Form, Button, Row, Col, Alert, Container } from 'react-bootstrap'\r\n\r\nconst Profile = ({ userInfo }) => {\r\n    return (\r\n        <Container className=\"my-5 text-center\">\r\n            <h2>\r\n                Hello {userInfo.name} !<br></br>\r\n            </h2>\r\n            <p>Your username : {userInfo.userName} <br></br>Your mail : {userInfo.email}</p>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","export default __webpack_public_path__ + \"static/media/side_logo.75e90a63.png\";","import React from 'react'\r\nimport { Nav, NavItem } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport banner from '../assets/side_logo.png'\r\n\r\nconst SideNav = ({ pages }) => {\r\n\r\n    return (\r\n        <>\r\n            <Nav className=\"col-md-12 d-none d-md-block sidebar\"\r\n                defaultActiveKey=\"/dashboard/profile\">\r\n                <img src={banner} className=\"sidenav_logo\" />\r\n                <div className=\"sidebar-sticky\"></div>\r\n                <br></br>\r\n                {\r\n                    pages.map((page, index) => {\r\n                        return (\r\n                            <NavItem key={index}>\r\n                                <Link className=\"sidenav_items\" to={\"/dashboard/\" + page.path}>{page.name}</Link><hr></hr>\r\n                            </NavItem>\r\n                        )\r\n                    }\r\n                    )\r\n                }\r\n                <NavItem ><Link className=\"sidenav_items\" to=\"/\" onClick={() => {\r\n                    window.location.reload(false);\r\n                }}>Logout</Link></NavItem><hr></hr>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Alert, Container, Table, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserList, addUser } from '../actions/userAction'\r\n\r\n\r\nconst AdminUsers = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [userType, setUserType] = useState('')\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const usersList = useSelector(state => state.usersList)\r\n    const newUser = useSelector(state => state.newUser)\r\n    useEffect(() => {\r\n        dispatch(getUserList())\r\n    }, [dispatch, newUser])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addUser(email, name, userName, userType))\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <div className=\"d-flex flex-row-reverse\">\r\n                <Button variant=\"primary\" className=\"button_color\" onClick={handleShow}>Add User</Button>\r\n            </div>\r\n            <h6 className=\"bg-light p-3 mt-3\">ALL-USERS</h6>\r\n            {newUser.error && <Alert variant=\"danger\">{newUser.error}</Alert>}\r\n\r\n            {\r\n                usersList.loading == undefined || usersList.loading ? <>loading</> :\r\n                    <div className=\"table_scroll\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Username</th>\r\n                                    <th>UserType</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    usersList.users.map((user, index) => {\r\n                                        return (\r\n                                            <tr key={index + 1}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{user.name}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>{user.userName}</td>\r\n                                                <td>{user.userType}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n            }\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Users</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {newUser.error && <Alert variant=\"danger\">{newUser.error}</Alert>}\r\n                    <Form onSubmit={submitHandler} className=\"mt-3\">\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email-id\" value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Name\" value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"userName\">\r\n                            <Form.Label>User Name </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" value={userName} onChange={(e) => setUserName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"userType\">\r\n                            <Form.Label className=\"mr-3\">User Type </Form.Label>\r\n                            <Form.Check inline label=\"Admin\" name=\"usertype\" type=\"radio\" id=\"1\" value=\"admin\" onChange={(e) => { setUserType(e.target.value) }} />\r\n                            <Form.Check inline label=\"User\" name=\"usertype\" type=\"radio\" id=\"2\" value=\"user\" onChange={(e) => setUserType(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"info\">Add user</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminUsers\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Row, Col, Container, Alert } from 'react-bootstrap'\r\nimport Profile from '../components/Profile'\r\nimport SideNav from '../components/SideNav'\r\nimport AdminUsers from '../components/AdminUsers'\r\nimport { Route } from 'react-router-dom'\r\n\r\nconst authPages = {\r\n    \"admin\": [{ \"path\": \"profile\", \"name\": \"Profile\" }, { \"path\": \"admin\", \"name\": \"Users\" }],\r\n    \"user\": [{ \"path\": \"profile\", \"name\": \"Profile\" }],\r\n}\r\n\r\nconst Dashboard = ({ history }) => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n    return (\r\n\r\n        <>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            { userInfo ?\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs={2} id=\"sidebar-wrapper\">\r\n                            <SideNav history={history} pages={authPages[userInfo.userType]} />\r\n                        </Col>\r\n                        <Col xs={10} id=\"page-content-wrapper\">\r\n                            <Route exact path='/dashboard/admin' component={AdminUsers} />\r\n                            <Route exact path='/dashboard/profile' userInfo={userInfo} render={(props) => <Profile {...props} userInfo={userInfo} />} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container> : history.push('/')\r\n            }\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard;","import './App.css';\nimport React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Login from './screens/Login';\nimport Dashboard from './screens/Dashboard';\n\nfunction App() {\n  return (\n\n    <>\n      <Switch>\n        <Route exact path='/' component={Login} ></Route>\n        <Route exact path='/dashboard/*' component={Dashboard} ></Route>\n      </Switch>\n    </>\n  )\n}\n\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { userLoginReducer, userListReducer, addUserReducer } from './reducers/userReducers'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    usersList: userListReducer,\r\n    newUser: addUserReducer\r\n})\r\n\r\n// const userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: null }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\nexport default store","import {\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USERS_LIST_FAIL, USERS_LIST_REQUEST, USERS_LIST_SUCCESS,\r\n    USER_ADD_FAIL, USER_ADD_REQUEST, USER_ADD_SUCCESS,\r\n\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: {} }, action) => {\r\n    switch (action.type) {\r\n        case USERS_LIST_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USERS_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USERS_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addUserReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_ADD_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_ADD_SUCCESS:\r\n            return { loading: false, newuser: action.payload }\r\n        case USER_ADD_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}