[{"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\index.js":"1","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\App.js":"3","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\actions\\userAction.js":"4","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\constants\\userConstants.js":"5","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\store.js":"6","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\screens\\Dashboard.js":"8","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\screens\\Login.js":"9","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\components\\Profile.js":"10","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\components\\SideNav.js":"11","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\components\\AdminUsers.js":"12"},{"size":722,"mtime":1611163300221,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":412,"mtime":1611174550340,"results":"16","hashOfConfig":"14"},{"size":2078,"mtime":1611164033069,"results":"17","hashOfConfig":"14"},{"size":520,"mtime":1611159727515,"results":"18","hashOfConfig":"14"},{"size":738,"mtime":1611160040589,"results":"19","hashOfConfig":"14"},{"size":1531,"mtime":1611159942316,"results":"20","hashOfConfig":"14"},{"size":1495,"mtime":1611174515131,"results":"21","hashOfConfig":"14"},{"size":2450,"mtime":1611174596261,"results":"22","hashOfConfig":"14"},{"size":445,"mtime":1611174422218,"results":"23","hashOfConfig":"14"},{"size":1163,"mtime":1611174889297,"results":"24","hashOfConfig":"14"},{"size":4990,"mtime":1611174500722,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"10hgq0v",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\index.js",[],["56","57"],"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\App.js",[],"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\actions\\userAction.js",["58"],"import axios from \"axios\"\r\nimport {\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,\r\n    USER_ADD_FAIL, USER_ADD_REQUEST, USER_ADD_SUCCESS,\r\n    USERS_LIST_FAIL, USERS_LIST_REQUEST, USERS_LIST_SUCCESS\r\n\r\n} from \"../constants/userConstants\"\r\n\r\nconst url = \"http://localhost:3000\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'appliction/json'\r\n            }\r\n        }\r\n        // const { data } = await axios.post(`${url}/api/login`, { email, password, config })\r\n        const { data } = await axios.post(`/api/login`, { email, password, config })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USER_LOGIN_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const getUserList = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USERS_LIST_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/getAllUsers`)\r\n        dispatch({\r\n            type: USERS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USERS_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const addUser = (email, name, userName, userType) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_ADD_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.post(`/api/addUser`, { email, name, userName, userType })\r\n        dispatch({\r\n            type: USER_ADD_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USER_ADD_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}   ","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\store.js",[],"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\screens\\Dashboard.js",[],"C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\screens\\Login.js",["59"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Alert, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/userAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n\r\n    //to get state from store\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n            history.push('/dashboard/profile')\r\n        }\r\n\r\n    }, [userInfo])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"login\">\r\n                <Col xs={{ span: 12, order: 2 }} md={{ span: 6, order: 1 }} className=\"login_banner\">\r\n                </Col>\r\n                <Col xs={{ span: 12, order: 2 }} md={{ span: 6, order: 1 }} className=\"login_form\">\r\n                    <Container>\r\n                        <h4 className=\"text-center \">\r\n                            <strong>Login via Email</strong>\r\n                        </h4>\r\n                        {error && <Alert variant=\"danger\" className=\"login_form_item\">{error}</Alert>}\r\n                        <Form onSubmit={submitHandler} className=\"login_form_item\">\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Your primary address\" value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password </Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Your password\" value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"info\">Sign In</Button>\r\n                        </Form>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\components\\Profile.js",["60","61","62","63","64"],"import React from 'react'\r\nimport { Form, Button, Row, Col, Alert, Container } from 'react-bootstrap'\r\n\r\nconst Profile = ({ userInfo }) => {\r\n    return (\r\n        <Container className=\"my-5 text-center\">\r\n            <h2>\r\n                Hello {userInfo.name} !<br></br>\r\n            </h2>\r\n            <p>Your username : {userInfo.userName} <br></br>Your mail : {userInfo.email}</p>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\components\\SideNav.js",["65"],"import React from 'react'\r\nimport { Nav, NavItem } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport banner from '../assets/side_logo.png'\r\n\r\nconst SideNav = ({ pages }) => {\r\n\r\n    return (\r\n        <>\r\n            <Nav className=\"col-md-12 d-none d-md-block sidebar\"\r\n                defaultActiveKey=\"/dashboard/profile\">\r\n                <img src={banner} className=\"sidenav_logo\" />\r\n                <div className=\"sidebar-sticky\"></div>\r\n                <br></br>\r\n                {\r\n                    pages.map((page, index) => {\r\n                        return (\r\n                            <NavItem key={index}>\r\n                                <Link className=\"sidenav_items\" to={\"/dashboard/\" + page.path}>{page.name}</Link><hr></hr>\r\n                            </NavItem>\r\n                        )\r\n                    }\r\n                    )\r\n                }\r\n                <NavItem ><Link className=\"sidenav_items\" to=\"/\" onClick={() => {\r\n                    window.location.reload(false);\r\n                }}>Logout</Link></NavItem><hr></hr>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","C:\\Users\\BindushreeN\\Desktop\\portfolio\\projects\\admin-panel\\frontend\\src\\components\\AdminUsers.js",["66","67","68"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Alert, Container, Table, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserList, addUser } from '../actions/userAction'\r\n\r\n\r\nconst AdminUsers = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [userType, setUserType] = useState('')\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const usersList = useSelector(state => state.usersList)\r\n    const newUser = useSelector(state => state.newUser)\r\n    useEffect(() => {\r\n        dispatch(getUserList())\r\n    }, [dispatch, newUser])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addUser(email, name, userName, userType))\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <div className=\"d-flex flex-row-reverse\">\r\n                <Button variant=\"primary\" className=\"button_color\" onClick={handleShow}>Add User</Button>\r\n            </div>\r\n            <h6 className=\"bg-light p-3 mt-3\">ALL-USERS</h6>\r\n            {newUser.error && <Alert variant=\"danger\">{newUser.error}</Alert>}\r\n\r\n            {\r\n                usersList.loading == undefined || usersList.loading ? <>loading</> :\r\n                    <div className=\"table_scroll\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Username</th>\r\n                                    <th>UserType</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    usersList.users.map((user, index) => {\r\n                                        return (\r\n                                            <tr key={index + 1}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{user.name}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>{user.userName}</td>\r\n                                                <td>{user.userType}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n            }\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Users</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {newUser.error && <Alert variant=\"danger\">{newUser.error}</Alert>}\r\n                    <Form onSubmit={submitHandler} className=\"mt-3\">\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email-id\" value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Name\" value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"userName\">\r\n                            <Form.Label>User Name </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" value={userName} onChange={(e) => setUserName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"userType\">\r\n                            <Form.Label className=\"mr-3\">User Type </Form.Label>\r\n                            <Form.Check inline label=\"Admin\" name=\"usertype\" type=\"radio\" id=\"1\" value=\"admin\" onChange={(e) => { setUserType(e.target.value) }} />\r\n                            <Form.Check inline label=\"User\" name=\"usertype\" type=\"radio\" id=\"2\" value=\"user\" onChange={(e) => setUserType(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"info\">Add user</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminUsers\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":7,"nodeType":"75","messageId":"76","endLine":9,"endColumn":10},{"ruleId":"77","severity":1,"message":"78","line":25,"column":8,"nodeType":"79","endLine":25,"endColumn":18,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"81","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"82","line":2,"column":16,"nodeType":"75","messageId":"76","endLine":2,"endColumn":22},{"ruleId":"73","severity":1,"message":"83","line":2,"column":24,"nodeType":"75","messageId":"76","endLine":2,"endColumn":27},{"ruleId":"73","severity":1,"message":"84","line":2,"column":29,"nodeType":"75","messageId":"76","endLine":2,"endColumn":32},{"ruleId":"73","severity":1,"message":"85","line":2,"column":34,"nodeType":"75","messageId":"76","endLine":2,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":12,"column":17,"nodeType":"88","endLine":12,"endColumn":62},{"ruleId":"73","severity":1,"message":"83","line":2,"column":24,"nodeType":"75","messageId":"76","endLine":2,"endColumn":27},{"ruleId":"73","severity":1,"message":"84","line":2,"column":29,"nodeType":"75","messageId":"76","endLine":2,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":41,"column":35,"nodeType":"91","messageId":"92","endLine":41,"endColumn":37},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'Form' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [history, userInfo]",{"range":"98","text":"99"},[727,737],"[history, userInfo]"]